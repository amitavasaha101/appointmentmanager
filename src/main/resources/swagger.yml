swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.1"
  title: Appointment Management
  description: |
    The appointment management API performs appointment creation for two types of appointments, namely -
    ToDo and Followup.
  contact:
   name: Amitava Saha
   email: amitava.saha@infosys.com
   url: http://www.infosys.com
host:  
  localhost:8500
basePath: /appointment
schemes:
  - http
definitions:
  Appointment:
   properties:
    appointmentId:
     type: integer
    appointmentDate:
     type: string
     description: date in dd-mm-yyyy format
    startTime:
     type: string
     description: time in hh24:mm format
    endTime:
     type: string
     description: time in hh24:mm format
    subject:
     type: string
     description: subject of the appointment
    details:
     type: string
     description: appointment detailed description
    appointmentType:
     type: string
     description: Todo or Followup or both
    username:
     type: string
     description: user for whom the appointment has to be created
  ErrorMessage:
   properties:
    message:
     type: string
     description: descriptive message explaining the error state.
# Describe your paths here
paths:
  # This is a view appointments endpoint.
  /all:
    get:
      summary: Get appointments
      description: |
        Gets list of `Appointment` objects for the user
        Based on the query parameter of **username**.
      parameters:
        - name: username
          in: query
          description: user for which list of appointments are to be displayed.
          required: true
          type: string
      produces: 
        - application/json
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response with a list of appointments 
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: ArrayOfAppointments
            type: array
            items:
             $ref: '#/definitions/Appointment'
        404:
          description: This http response is returned if there aren't any appointments for the user.
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: This http response is returned if there is an internal server error.
          schema:
            $ref: '#/definitions/ErrorMessage'
  /createAppointment:
    post:
      summary: Create one or more appointments
      description: Creates one or more appointments based on the request received from user.
      parameters: 
       - name: Appointment
         schema:
          $ref: '#/definitions/Appointment'
         in: body
      produces: 
        - application/json
      responses:
        200:
          description: Successful response with appointmentId created.
          schema:
            $ref: '#/definitions/ErrorMessage'
        400:
          description: This http response is returned if the specified request is invalid.
          schema:
            $ref: '#/definitions/ErrorMessage'
        500:
          description: This http response is returned if there is an internal server error. 
          schema:
            $ref: '#/definitions/ErrorMessage'
